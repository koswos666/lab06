name: Package

on:
  push:
    tags: "*"

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: false
        clean: true

    - name: Clean workspace
      shell: bash
      run: |
        rm -rf build/ || true
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          rm -rf build\\ || true
        fi

    - name: Install dependencies
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          sudo apt-get update && sudo apt-get install -y rpm
        fi

    - name: Configure CMake
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          cmake -B build -G "Visual Studio 17 2022" -A x64 \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=OFF \
            -DCMAKE_CXX_FLAGS="/EHsc /W3"
        else
          cmake -B build -DCMAKE_BUILD_TYPE=Release \
            -DCPACK_DEBIAN_PACKAGE_MAINTAINER="Sweta <hostikovasweta@gmail.com>"
        fi

    - name: Build
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          cmake --build build --config Release -- /m
        else
          cmake --build build --config Release
        fi

    - name: Package
      shell: bash
      run: |
        cd build
        case "${{ matrix.os }}" in
          "ubuntu-latest")
            cpack -C DEB
            ;;
          "macos-latest")
            cpack -C DragNDrop
            ;;
          "windows-latest")
            cpack -C WIX -C Release
            ;;
        esac

    - uses: actions/upload-artifact@v4
      with:
        name: packages-${{ matrix.os }}
        path: build/*.${{ matrix.os == 'ubuntu-latest' && 'deb' || matrix.os == 'macos-latest' && 'dmg' || 'msi' }}
