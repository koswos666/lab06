name: Package

on:
  push:
    tags:
      - v*

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: false
          clean: true

      - name: Clean workspace
        shell: bash
        run: |
          rm -rf build/ || true
          if [ "${{ runner.os }}" == "Windows" ]; then
            cmd /c "rmdir /s /q build" 2> nul || true
          fi

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y rpm

      - name: Configure CMake
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            # Специальная настройка для Windows
            cmake -B build -G "Visual Studio 17 2022" -A x64 \
              -DCMAKE_BUILD_TYPE=Release \
              -Dgtest_force_shared_crt=ON \
              -DBUILD_SHARED_LIBS=ON \
              -DCMAKE_CXX_FLAGS="/MD /EHsc" \
              -DCPACK_DEBIAN_PACKAGE_MAINTAINER="Sveta <kostikovassveta@gmail.com>"
          else
            cmake -B build -DCMAKE_BUILD_TYPE=Release \
              -DCPACK_DEBIAN_PACKAGE_MAINTAINER="Sveta <kostikovassveta@gmail.com>"
          fi

      - name: Build
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            cmake --build build --config Release -- /m
          else
            cmake --build build --config Release
          fi

      - name: Package
        shell: bash
        run: |
          cd build
          case "${{ runner.os }}" in
            "Linux")
              cpack -G DEB
              ;;
            "macOS")
              cpack -G DragNDrop
              ;;
            "Windows")
              cpack -G WIX -C Release
              ;;
          esac

      - uses: actions/upload-artifact@v4
        with:
          name: packages-${{ runner.os }}
          path: build/*.${{ runner.os == 'Linux' && 'deb' || 
                             runner.os == 'macOS' && 'dmg' || 
                             'msi' }}
